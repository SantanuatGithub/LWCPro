import { NormalizedCompilerOptions, CompilerOptions } from '../compiler/options';
import { TemplateMetadata } from './template';
import { MetadataCollector } from '../bundler/meta-collector';
import { SourceMap } from '../compiler/compiler';
export interface FileTransformerResult {
    code: string;
    metadata?: TemplateMetadata;
    map: SourceMap | null;
}
/**
 * Transforms the passed code. Returning a Promise of an object with the generated code, source map
 * and gathered metadata.
 *
 * @deprecated Use transformSync instead.
 */
export declare function transform(src: string, filename: string, options: CompilerOptions): Promise<FileTransformerResult>;
/**
 * Transform the passed source code. Returning an object with the generated code, source map and
 * gathered metadata.
 */
export declare function transformSync(src: string, filename: string, options: CompilerOptions): FileTransformerResult;
export declare function transformFile(src: string, filename: string, options: NormalizedCompilerOptions, metadataCollector?: MetadataCollector): FileTransformerResult;

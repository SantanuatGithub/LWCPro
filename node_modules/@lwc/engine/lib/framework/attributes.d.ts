export declare const defaultDefHTMLPropertyNames: string[];
export declare function getGlobalHTMLPropertiesInfo(): {
    id: {
        attribute: string;
        reflective: boolean;
    };
    accessKey: {
        attribute: string;
        reflective: boolean;
    };
    accessKeyLabel: {
        readOnly: boolean;
    };
    className: {
        attribute: string;
        error: string;
    };
    contentEditable: {
        attribute: string;
        reflective: boolean;
    };
    isContentEditable: {
        readOnly: boolean;
    };
    contextMenu: {
        attribute: string;
    };
    dataset: {
        readOnly: boolean;
        error: string;
    };
    dir: {
        attribute: string;
        reflective: boolean;
    };
    draggable: {
        attribute: string;
        experimental: boolean;
        reflective: boolean;
    };
    dropzone: {
        attribute: string;
        readOnly: boolean;
        experimental: boolean;
    };
    hidden: {
        attribute: string;
        reflective: boolean;
    };
    itemScope: {
        attribute: string;
        experimental: boolean;
    };
    itemType: {
        attribute: string;
        readOnly: boolean;
        experimental: boolean;
    };
    itemId: {
        attribute: string;
        experimental: boolean;
    };
    itemRef: {
        attribute: string;
        readOnly: boolean;
        experimental: boolean;
    };
    itemProp: {
        attribute: string;
        readOnly: boolean;
        experimental: boolean;
    };
    itemValue: {
        experimental: boolean;
    };
    lang: {
        attribute: string;
        reflective: boolean;
    };
    offsetHeight: {
        readOnly: boolean;
        error: string;
    };
    offsetLeft: {
        readOnly: boolean;
        error: string;
    };
    offsetParent: {
        readOnly: boolean;
    };
    offsetTop: {
        readOnly: boolean;
        error: string;
    };
    offsetWidth: {
        readOnly: boolean;
        error: string;
    };
    properties: {
        readOnly: boolean;
        experimental: boolean;
    };
    spellcheck: {
        experimental: boolean;
        reflective: boolean;
    };
    style: {
        attribute: string;
        error: string;
    };
    tabIndex: {
        attribute: string;
        reflective: boolean;
    };
    title: {
        attribute: string;
        reflective: boolean;
    };
    translate: {
        experimental: boolean;
    };
    role: {
        attribute: string;
    };
    slot: {
        attribute: string;
        experimental: boolean;
        error: string;
    };
};
/**
 * This method maps between attribute names
 * and the corresponding property name.
 */
export declare function getPropNameFromAttrName(attrName: string): string;
/**
 * This method maps between property names
 * and the corresponding attribute name.
 */
export declare function getAttrNameFromPropName(propName: string): string;
export declare function isAttributeLocked(elm: Element, attrName: string): boolean;
export declare function lockAttribute(_elm: Element, _key: string): void;
export declare function unlockAttribute(elm: Element, key: string): void;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const document_1 = require("../../env/document");
const vm_1 = require("../../framework/vm");
const language_1 = require("../../shared/language");
const node_1 = require("../../env/node");
const retarget_1 = require("../../3rdparty/polymer/retarget");
const path_composer_1 = require("../../3rdparty/polymer/path-composer");
function apply() {
    function elemFromPoint(left, top) {
        const element = document_1.elementFromPoint.call(document, left, top);
        if (language_1.isNull(element)) {
            return element;
        }
        return retarget_1.retarget(document, path_composer_1.pathComposer(element, true));
    }
    // https://github.com/Microsoft/TypeScript/issues/14139
    document.elementFromPoint = elemFromPoint;
    // Go until we reach to top of the LWC tree
    language_1.defineProperty(document, 'activeElement', {
        get() {
            let node = document_1.DocumentPrototypeActiveElement.call(this);
            if (language_1.isNull(node)) {
                return node;
            }
            while (!language_1.isUndefined(vm_1.getNodeOwnerKey(node))) {
                node = node_1.parentElementGetter.call(node);
                if (language_1.isNull(node)) {
                    return null;
                }
            }
            if (node.tagName === 'HTML') {
                // IE 11. Active element should never be html element
                node = document.body;
            }
            return node;
        },
        enumerable: true,
        configurable: true,
    });
}
exports.default = apply;
//# sourceMappingURL=polyfill.js.map
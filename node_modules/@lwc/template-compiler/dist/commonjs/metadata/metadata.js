"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const types_1 = require("../shared/types");
const naming_1 = require("../shared/naming");
const generator_1 = __importDefault(require("@babel/generator"));
const babelTypes = __importStar(require("@babel/types"));
function getModuleMetadata(element) {
    let properties;
    // Note that we only collect properties and not attributes (such as 'class', 'data-*')
    if (element.props) {
        properties = {};
        for (const [name, value] of Object.entries(element.props)) {
            let returnedType;
            let returnedValue;
            if (value.type === types_1.IRAttributeType.Expression) {
                returnedType = 'expression';
                const expression = value.value;
                if (babelTypes.isMemberExpression(expression)) {
                    returnedValue = generator_1.default(expression).code;
                }
                else {
                    returnedValue = expression.name;
                }
            }
            else {
                returnedType = 'literal';
                returnedValue = value.value;
            }
            properties[name] = {
                type: returnedType,
                value: returnedValue,
            };
        }
    }
    return {
        moduleName: naming_1.kebabcaseToCamelcase(element.component),
        tagName: element.tag,
        properties,
    };
}
exports.getModuleMetadata = getModuleMetadata;
//# sourceMappingURL=metadata.js.map